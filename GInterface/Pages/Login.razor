@page "/login"

<div class="login-container">
    <div class="login-logo">
        <img src="images/logo.png" alt="Company Logo" />
    </div>
    <EditForm Model="loginModel" OnValidSubmit="@HandleLogin">
        <div class="row">
            <div class="rz-p-2 rz-text-align-center">
                <RadzenTextBox @bind-Value="loginModel.Username" Placeholder="Username" Style="width:100%" />
            </div>
            <div class="rz-p-2 rz-text-align-center">
                <RadzenPassword @bind-Value="loginModel.Password" Placeholder="Password" Style="width:100%" />
            </div>
        </div>
        <div class="row">
            <div class="rz-p-4 rz-text-align-center">
                <RadzenButton Type="submit" Text="Login" Style="width:100%" />
            </div>
        </div>
    </EditForm>

</div>

@code {
    //Get Global Core Settings
    private Core.AppCore _appCore = Core.AppCore.Instance;

    private User loginModel;

    protected override void OnInitialized()
    {
        loginModel = new User { Username = "test", Password = "123456" };
        _appCore.IsLoginUser = true;
    }

    private async void HandleLogin()
    {
        // Aquí iría la lógica de autenticación
        var isAuthenticated = await AuthenticationService.LoginAsync(loginModel.Username, loginModel.Password);
        if (isAuthenticated)
        {
            // Autenticación exitosa
            NotificationService.Notify(new NotificationMessage
                {
                    Severity = NotificationSeverity.Info,
                    Summary = "Login Summary",
                    Detail = "Inicio de sesión exitoso",
                    Duration = 4000
                });
        }
        else
        {
            // Autenticación fallida
            NotificationService.Notify(new NotificationMessage
                {
                    Severity = NotificationSeverity.Error,
                    Summary = "Login Summary",
                    Detail = "Inicio de sesión fallido",
                    Duration = 4000
                });
        }
    }
    
}
